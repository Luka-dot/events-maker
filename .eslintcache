[{"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\index.tsx":"1","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\layout\\App.tsx":"2","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventDashboard.tsx":"3","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventList.tsx":"4","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventListItem.tsx":"5","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventListAttendee.tsx":"6","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventForm\\EventForm.tsx":"7","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedPage.tsx":"8","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\home\\HomePage.tsx":"9","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\nav\\NavBar.tsx":"10","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\nav\\SignOutMenu.tsx":"11","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\nav\\SigninMenu.tsx":"12","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedChat.tsx":"13","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedInfo.tsx":"14","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedSidebar.tsx":"15","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailsdHeader.tsx":"16","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\configureStore.ts":"17","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\reducers\\index.ts":"18","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\reducers\\events.ts":"19","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-types\\index.ts":"20","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-creators\\index.ts":"21","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-creators\\types.ts":"22","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-creators\\events.ts":"23","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\layout\\ScrollToTop.tsx":"24","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\MyTextInputs.tsx":"25","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\MyTextArea.tsx":"26","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\MySelectInput.tsx":"27","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\api\\categoryOptions.ts":"28","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\myDateInput.jsx":"29","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\api\\sampleData.ts":"30"},{"size":720,"mtime":1614784621887,"results":"31","hashOfConfig":"32"},{"size":1022,"mtime":1614742627784,"results":"33","hashOfConfig":"32"},{"size":1184,"mtime":1614743580592,"results":"34","hashOfConfig":"32"},{"size":834,"mtime":1614743589581,"results":"35","hashOfConfig":"32"},{"size":2800,"mtime":1615133609826,"results":"36","hashOfConfig":"32"},{"size":514,"mtime":1614647214584,"results":"37","hashOfConfig":"32"},{"size":4541,"mtime":1615133978827,"results":"38","hashOfConfig":"32"},{"size":1517,"mtime":1614743027608,"results":"39","hashOfConfig":"32"},{"size":904,"mtime":1614647268992,"results":"40","hashOfConfig":"32"},{"size":1386,"mtime":1614647281577,"results":"41","hashOfConfig":"32"},{"size":502,"mtime":1614647292536,"results":"42","hashOfConfig":"32"},{"size":856,"mtime":1614647287644,"results":"43","hashOfConfig":"32"},{"size":3855,"mtime":1614647229455,"results":"44","hashOfConfig":"32"},{"size":2157,"mtime":1615131540395,"results":"45","hashOfConfig":"32"},{"size":1349,"mtime":1614743252525,"results":"46","hashOfConfig":"32"},{"size":2180,"mtime":1615131360205,"results":"47","hashOfConfig":"32"},{"size":377,"mtime":1614719732827,"results":"48","hashOfConfig":"32"},{"size":722,"mtime":1614651793118,"results":"49","hashOfConfig":"32"},{"size":1326,"mtime":1614721657145,"results":"50","hashOfConfig":"32"},{"size":136,"mtime":1614559093725,"results":"51","hashOfConfig":"32"},{"size":51,"mtime":1614560808538,"results":"52","hashOfConfig":"32"},{"size":252,"mtime":1614633982223,"results":"53","hashOfConfig":"32"},{"size":1217,"mtime":1614649982469,"results":"54","hashOfConfig":"32"},{"size":268,"mtime":1614784595272,"results":"55","hashOfConfig":"32"},{"size":606,"mtime":1614959364407,"results":"56","hashOfConfig":"32"},{"size":608,"mtime":1614961226007,"results":"57","hashOfConfig":"32"},{"size":765,"mtime":1614978156827,"results":"58","hashOfConfig":"32"},{"size":351,"mtime":1614977796164,"results":"59","hashOfConfig":"32"},{"size":932,"mtime":1615130785741,"results":"60","hashOfConfig":"32"},{"size":1849,"mtime":1615130983894,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"qll9wf",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\index.tsx",[],["133","134"],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\layout\\App.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventDashboard.tsx",["135"],"import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport EventList from './EventList';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../app/store/reducers';\r\n\r\n// interface eventDashboardProps {\r\n//     setFormOpen: Function;\r\n//     formOpen: Boolean;\r\n//     selectEvent: Function;\r\n//     selectedEvent?: eventData;\r\n//     events: eventData[];\r\n// }\r\n\r\ninterface attendeeData {\r\n    id: string;\r\n    name: string;\r\n    photoURL: string;\r\n}\r\n\r\ninterface eventData {\r\n    id: string; \r\n    title: string; \r\n    date: string; \r\n    category: string; \r\n    description: string; \r\n    city: string; \r\n    venue: string; \r\n    hostedBy: string; \r\n    hostPhotoURL: string; \r\n    attendees: attendeeData[]\r\n}\r\n\r\nfunction EventDashboard(): JSX.Element {\r\n    const events = useSelector((state: RootState) => state.event)\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <EventList events={events} />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <h2>Event Filters</h2>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default EventDashboard\r\n\r\n","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventList.tsx",["136"],"import React from 'react';\r\nimport EventListItem from './EventListItem';\r\n\r\ninterface attendeeData {\r\n    id: string;\r\n    name: string;\r\n    photoURL: string;\r\n}\r\n\r\ninterface eventData {\r\n    id: string; \r\n    title: string; \r\n    date: string; \r\n    category: string; \r\n    description: string; \r\n    city: string; \r\n    venue: string; \r\n    hostedBy: string; \r\n    hostPhotoURL: string; \r\n    attendees: attendeeData[]\r\n}\r\n\r\ninterface propsToPass {\r\n    events:{ events: eventData[]};\r\n}\r\n\r\nexport default function EventList(props: any): JSX.Element {\r\n    const renderEventList = () => {\r\n        return props.events.events.map((event: eventData) => {\r\n            return <EventListItem key={event.id} singleEvent={event} />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {renderEventList()}\r\n        </>\r\n    )\r\n};\r\n","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventListItem.tsx",["137","138"],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDashbord\\EventListAttendee.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventForm\\EventForm.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedPage.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\nav\\NavBar.tsx",["139"],"import React, { useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { Button, Container, Icon, Menu } from 'semantic-ui-react';\r\nimport SigninMenu from './SigninMenu';\r\nimport SignOutMenu from './SignOutMenu';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// interface navBarProps {\r\n//     setFormOpen: Function; \r\n//     formOpen: Boolean;\r\n// }\r\n\r\nexport default function NavBar(): JSX.Element {\r\n    const history = useHistory();\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    function handleSignOut() {\r\n        setAuthenticated(false);\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <Menu inverted fixed='top'>\r\n            <Container >\r\n                <Menu.Item as={NavLink} exact to='/' header>\r\n                   <Icon name=\"world\" size=\"large\" color=\"orange\" />\r\n                    Events-Maker\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/events' name=\"events\" />\r\n                {authenticated && \r\n                    <Menu.Item as={NavLink} to='/createEvent' >\r\n                        <Button positive inverted content='Create Event' />\r\n                    </Menu.Item> }\r\n                    {authenticated ? <SigninMenu signOut={handleSignOut}/> : <SignOutMenu setAuthenticated={setAuthenticated} /> }\r\n            </Container>\r\n        </Menu>\r\n    )\r\n};  ","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\nav\\SignOutMenu.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\nav\\SigninMenu.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedChat.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedInfo.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailedSidebar.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\features\\events\\eventDetailed\\EventDetailsdHeader.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\configureStore.ts",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\reducers\\index.ts",["140"],"import { combineReducers } from 'redux';\r\nimport { eventReducer } from './events';\r\n\r\ninterface attendeeData {\r\n    id: string;\r\n    name: string;\r\n    photoURL: string;\r\n};\r\n\r\nexport interface eventData {\r\n    id: string; \r\n    title: string; \r\n    date: string; \r\n    category: string; \r\n    description: string; \r\n    city: string; \r\n    venue: string; \r\n    hostedBy: string; \r\n    hostPhotoURL: string; \r\n    attendees: attendeeData[]\r\n};\r\ninterface EventsState {\r\n    events: eventData[]\r\n};\r\nexport interface StoreState {\r\n\tevent: eventData[]\r\n}\r\n\r\nconst rootReducer = combineReducers<StoreState>({\r\n\tevent: eventReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\reducers\\events.ts",["141"],"import { ActionTypes } from '../action-types/index';\r\nimport { Action } from '../action-creators/index';\r\n\r\nimport {sampleData} from '../../api/sampleData';\r\n\r\ninterface attendeeData {\r\n    id: string;\r\n    name: string;\r\n    photoURL: string;\r\n}\r\n\r\ninterface eventData {\r\n    id: string; \r\n    title: string; \r\n    date: string; \r\n    category: string; \r\n    description: string; \r\n    city: string; \r\n    venue: string; \r\n    hostedBy: string; \r\n    hostPhotoURL: string; \r\n    attendees: attendeeData[]\r\n}\r\ninterface EventsState {\r\n    events: eventData[]\r\n};\r\n\r\nconst initialState: any = { events: sampleData};\r\n\r\nexport const eventReducer = (state = initialState, {type, payload}: Action) =>{\r\n    \r\n    switch (type) {\r\n        case ActionTypes.CREATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, payload]\r\n            }\r\n        case ActionTypes.UPDATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: [...state.events.filter((evt: any) => evt.id !== payload.id), payload]\r\n            }\r\n        case ActionTypes.DELETE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: [...state.events.filter((evt: any) => evt.id !== payload.id)]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-types\\index.ts",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-creators\\index.ts",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-creators\\types.ts",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\store\\action-creators\\events.ts",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\MyTextInputs.tsx",["142"],"import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { FormField, Label } from 'semantic-ui-react';\r\n\r\ninterface MyTextProps {\r\n    label: String;\r\n    props: any\r\n}\r\n\r\nexport default function MyTextInput(props: any) {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null }\r\n        </FormField>\r\n    )\r\n};","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\MyTextArea.tsx",["143"],"import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { FormField, Label } from 'semantic-ui-react';\r\n\r\ninterface MyTextProps {\r\n    label: String;\r\n    props: any\r\n}\r\n\r\nexport default function MyTextArea(props: any) {\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null }\r\n        </FormField>\r\n    )\r\n};","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\MySelectInput.tsx",["144"],"import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { FormField, Label, Select } from 'semantic-ui-react';\r\n\r\nexport default function MySelectInput(props: any) {\r\n    const [field, meta, helpers] = useField(props);\r\n\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select \r\n                clearable\r\n                value={props.field}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                {...props}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null }\r\n        </FormField>\r\n    )\r\n};","C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\api\\categoryOptions.ts",[],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\shared\\form\\myDateInput.jsx",["145","146"],"import { useField, useFormikContext } from 'formik';\r\nimport React from 'react';\r\nimport { FormField, Label } from 'semantic-ui-react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { parseISO, format } from 'date-fns';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function MyDateInput(props) {\r\n    const {setFieldValue} = useFormikContext();\r\n    const [field, meta] = useField(props);\r\n\r\n    return (\r\n        <FormField error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <DatePicker \r\n            {...field}\r\n            {...props}\r\n            onChange={(value) => setFieldValue(field.name, value)}\r\n            selected={(field.value && new Date(field.value)) || null}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ) : null }\r\n        </FormField>\r\n    )\r\n};",["147","148"],"C:\\Users\\Luk'sC15\\coding\\react\\full-stack\\ts-events-finder\\src\\app\\api\\sampleData.ts",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":21,"column":11,"nodeType":"155","messageId":"156","endLine":21,"endColumn":20},{"ruleId":"153","severity":1,"message":"157","line":23,"column":11,"nodeType":"155","messageId":"156","endLine":23,"endColumn":22},{"ruleId":"153","severity":1,"message":"158","line":7,"column":18,"nodeType":"155","messageId":"156","endLine":7,"endColumn":26},{"ruleId":"153","severity":1,"message":"159","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":14},{"ruleId":"153","severity":1,"message":"160","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":21},{"ruleId":"153","severity":1,"message":"161","line":22,"column":11,"nodeType":"155","messageId":"156","endLine":22,"endColumn":22},{"ruleId":"153","severity":1,"message":"161","line":24,"column":11,"nodeType":"155","messageId":"156","endLine":24,"endColumn":22},{"ruleId":"153","severity":1,"message":"162","line":5,"column":11,"nodeType":"155","messageId":"156","endLine":5,"endColumn":22},{"ruleId":"153","severity":1,"message":"162","line":5,"column":11,"nodeType":"155","messageId":"156","endLine":5,"endColumn":22},{"ruleId":"153","severity":1,"message":"163","line":6,"column":12,"nodeType":"155","messageId":"156","endLine":6,"endColumn":17},{"ruleId":"164","severity":1,"message":"158","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":5,"column":20,"nodeType":"155","messageId":"156","endLine":5,"endColumn":26},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"@typescript-eslint/no-unused-vars","'eventData' is defined but never used.","Identifier","unusedVar","'propsToPass' is defined but never used.","'parseISO' is defined but never used.","'date' is defined but never used.","'useSelector' is defined but never used.","'EventsState' is defined but never used.","'MyTextProps' is defined but never used.","'field' is assigned a value but never used.","no-unused-vars","'format' is defined but never used.","no-global-assign","no-unsafe-negation"]